{
  "openapi": "3.0.4",
  "info": {
    "title": "Street Feast API 1.0",
    "version": "1.0"
  },
  "paths": {
    "/api/v1/Admin/users": {
      "get": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/DbLogs": {
      "get": {
        "tags": [
          "DbLogger"
        ],
        "parameters": [
          {
            "name": "Level",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Service",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "FromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ToDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Take",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IncludeCount",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDbLogsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/Maps/geocode/reverse": {
      "get": {
        "tags": [
          "Maps"
        ],
        "summary": "Reverse geocode coordinates to a street address.",
        "parameters": [
          {
            "name": "latitude",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "longitude",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleReverseGeocodeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/Maps/places/autocomplete": {
      "get": {
        "tags": [
          "Maps"
        ],
        "summary": "Get Google Places autocomplete suggestions.",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GooglePlaceAutocompleteSuggestion"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/Maps/places/details": {
      "get": {
        "tags": [
          "Maps"
        ],
        "summary": "Get geometry (lat/lng) for a Google place id.",
        "parameters": [
          {
            "name": "placeId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GooglePlaceGeometry"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/Notification/AddFCMToken": {
      "post": {
        "tags": [
          "Notification"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileSummary"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/Notification/SendMessageToTopic": {
      "post": {
        "tags": [
          "Notification"
        ],
        "parameters": [
          {
            "name": "topic",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "title",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/Webhooks/Stripe/PaymentSuccess": {
      "post": {
        "tags": [
          "StripeWebhook"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/test/testdapper": {
      "get": {
        "tags": [
          "Test"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/Truck/search": {
      "get": {
        "tags": [
          "Truck"
        ],
        "summary": "Gets a truck by id including schedule occurrences with menus and items.",
        "parameters": [
          {
            "name": "ownerUserId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "truckName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "take",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Truck"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/Truck/{truckId}": {
      "get": {
        "tags": [
          "Truck"
        ],
        "summary": "Get a single truck by id (including ordered images and schedule occurrences with location and menu, capped to 8 days ahead).",
        "parameters": [
          {
            "name": "truckId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Truck"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Truck"
        ],
        "parameters": [
          {
            "name": "truckId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Name": {
                    "type": "string"
                  },
                  "Cuisine": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "Phone": {
                    "type": "string"
                  },
                  "Website": {
                    "type": "string"
                  },
                  "Images": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/TruckImageUpsertUnion"
                    }
                  }
                }
              },
              "encoding": {
                "Name": {
                  "style": "form"
                },
                "Cuisine": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "Phone": {
                  "style": "form"
                },
                "Website": {
                  "style": "form"
                },
                "Images": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Truck"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/Truck/nearby": {
      "get": {
        "tags": [
          "Truck"
        ],
        "summary": "Gets trucks by geolocation radius that are open at the specified time (geometry + truck properties only).",
        "parameters": [
          {
            "name": "latitude",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "longitude",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "radius",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TruckNearbyReturnData"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/Truck": {
      "post": {
        "tags": [
          "Truck"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Cuisine",
                  "Name"
                ],
                "type": "object",
                "properties": {
                  "Name": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                  },
                  "Cuisine": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string"
                  },
                  "Description": {
                    "maxLength": 500,
                    "minLength": 0,
                    "type": "string"
                  },
                  "Phone": {
                    "maxLength": 20,
                    "minLength": 0,
                    "type": "string",
                    "format": "tel"
                  },
                  "Website": {
                    "maxLength": 200,
                    "minLength": 0,
                    "type": "string",
                    "format": "uri"
                  },
                  "Images": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/TruckImageUpsertUnion"
                    }
                  }
                }
              },
              "encoding": {
                "Name": {
                  "style": "form"
                },
                "Cuisine": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "Phone": {
                  "style": "form"
                },
                "Website": {
                  "style": "form"
                },
                "Images": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Truck"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/Truck/{id}/SendNotification": {
      "post": {
        "tags": [
          "Truck"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "title",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "message",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/Truck/{truckId}/location": {
      "get": {
        "tags": [
          "TruckLocation"
        ],
        "summary": "Gets truck locations within given parameters.",
        "parameters": [
          {
            "name": "TruckId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "LocationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TruckLocation"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "TruckLocation"
        ],
        "summary": "Create a Truck Location.",
        "parameters": [
          {
            "name": "truckId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TruckLocationCreateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TruckLocationCreateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TruckLocationCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TruckLocation"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/Truck/{truckId}/location/{locationId}": {
      "put": {
        "tags": [
          "TruckLocation"
        ],
        "summary": "Update a Truck Location.",
        "parameters": [
          {
            "name": "truckId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "locationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TruckLocationUpdateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TruckLocationUpdateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TruckLocationUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TruckLocation"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "TruckLocation"
        ],
        "summary": "Delete a Truck Location.",
        "parameters": [
          {
            "name": "truckId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "locationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/truck/{truckId}/menu": {
      "get": {
        "tags": [
          "TruckMenu"
        ],
        "summary": "Get menus (with items organized by categories) for a given truck.",
        "parameters": [
          {
            "name": "truckId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "menuId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TruckMenu"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "TruckMenu"
        ],
        "summary": "Create a truck menu with categorized items.",
        "parameters": [
          {
            "name": "truckId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TruckMenuCreateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TruckMenuCreateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TruckMenuCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TruckMenu"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/truck/{truckId}/menu/{menuId}": {
      "put": {
        "tags": [
          "TruckMenu"
        ],
        "summary": "Update a truck menu with categorized items.",
        "parameters": [
          {
            "name": "truckId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "menuId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TruckMenuUpdateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TruckMenuUpdateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TruckMenuUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TruckMenu"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "TruckMenu"
        ],
        "summary": "Delete a truck menu.",
        "parameters": [
          {
            "name": "truckId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "menuId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/truck/{truckId}/menu-item": {
      "get": {
        "tags": [
          "TruckMenuItem"
        ],
        "summary": "Get all menu items for a specific truck.",
        "parameters": [
          {
            "name": "truckId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TruckMenuItem"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "TruckMenuItem"
        ],
        "summary": "Create a single truck menu item with optional image upload.",
        "parameters": [
          {
            "name": "truckId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Name"
                ],
                "type": "object",
                "properties": {
                  "Name": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Description": {
                    "maxLength": 500,
                    "minLength": 0,
                    "type": "string"
                  },
                  "IsActive": {
                    "type": "boolean"
                  }
                }
              },
              "encoding": {
                "Name": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "IsActive": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TruckMenuItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/truck/{truckId}/menu-item/{itemId}": {
      "put": {
        "tags": [
          "TruckMenuItem"
        ],
        "summary": "Update a truck menu item.",
        "parameters": [
          {
            "name": "truckId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Id"
                ],
                "type": "object",
                "properties": {
                  "Id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "Name": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                  },
                  "Image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Description": {
                    "maxLength": 500,
                    "minLength": 0,
                    "type": "string"
                  },
                  "IsActive": {
                    "type": "boolean"
                  },
                  "ClearImage": {
                    "type": "boolean"
                  }
                }
              },
              "encoding": {
                "Id": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "Image": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "IsActive": {
                  "style": "form"
                },
                "ClearImage": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TruckMenuItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TruckMenuItem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "TruckMenuItem"
        ],
        "summary": "Delete a truck menu item.",
        "parameters": [
          {
            "name": "truckId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/truck/{truckId}/schedule/rules": {
      "get": {
        "tags": [
          "TruckSchedule"
        ],
        "summary": "Get all schedule rules for a truck (with Truck, Location, Menu embedded).",
        "parameters": [
          {
            "name": "truckId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TruckScheduleRule"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "TruckSchedule"
        ],
        "summary": "Create a new schedule rule. Returns the inserted rule with embedded Truck, Location, Menu.",
        "parameters": [
          {
            "name": "truckId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TruckScheduleRuleCreateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TruckScheduleRuleCreateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TruckScheduleRuleCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TruckScheduleRule"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/truck/{truckId}/schedule/rules/{ruleId}": {
      "get": {
        "tags": [
          "TruckSchedule"
        ],
        "summary": "Get a specific schedule rule by ID (with Truck, Location, Menu embedded).",
        "parameters": [
          {
            "name": "truckId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TruckScheduleRule"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "TruckSchedule"
        ],
        "summary": "Delete a schedule rule.",
        "parameters": [
          {
            "name": "truckId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/truck/{truckId}/schedule/occurrences": {
      "get": {
        "tags": [
          "TruckSchedule"
        ],
        "summary": "List occurrences (with Truck, Location, Menu embedded).",
        "parameters": [
          {
            "name": "truckId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startUtc",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endUtc",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TruckScheduleOccurrence"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "TruckSchedule"
        ],
        "summary": "Create an occurrence. Returns the created entity with embedded Truck, Location, Menu.",
        "parameters": [
          {
            "name": "truckId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TruckScheduleOccurrenceCreateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TruckScheduleOccurrenceCreateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TruckScheduleOccurrenceCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TruckScheduleOccurrence"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/truck/{truckId}/schedule/occurrences/{occurrenceId}": {
      "get": {
        "tags": [
          "TruckSchedule"
        ],
        "summary": "Get a single occurrence (with Truck, Location, Menu embedded).",
        "parameters": [
          {
            "name": "truckId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "occurrenceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TruckScheduleOccurrence"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "TruckSchedule"
        ],
        "summary": "Update an occurrence. Returns the updated entity with embedded Truck, Location, Menu.",
        "parameters": [
          {
            "name": "truckId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "occurrenceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TruckScheduleOccurrenceUpdateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TruckScheduleOccurrenceUpdateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TruckScheduleOccurrenceUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TruckScheduleOccurrence"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "TruckSchedule"
        ],
        "summary": "Delete an occurrence.",
        "parameters": [
          {
            "name": "truckId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "occurrenceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/User/Register": {
      "post": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileSummary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/User/RegisterTruck": {
      "post": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileSummary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/User/Favorites": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Add a truck to the current user's favorites.",
        "parameters": [
          {
            "name": "TruckId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserFavoriteMap"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get profile favorites (paged) as Trucks with their Images (Dapper, no helper records).",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "take",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Truck"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/User/Favorites/{Id}": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Remove a truck from the current user's favorites.",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserFavoriteMap"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/User/Profile": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user profile information.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileSummary"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/User/AddFCMToken": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/User": {
      "delete": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "DbLog": {
        "required": [
          "message",
          "service"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "level": {
            "$ref": "#/components/schemas/DbLogErrorLevel"
          },
          "service": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "targetUser": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbLogErrorLevel": {
        "enum": [
          "Info",
          "Warning",
          "Error"
        ],
        "type": "string"
      },
      "GeometryData": {
        "required": [
          "coordinates"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "coordinates": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetDbLogsResponse": {
        "required": [
          "logs",
          "skip",
          "take"
        ],
        "type": "object",
        "properties": {
          "skip": {
            "type": "integer",
            "format": "int32"
          },
          "take": {
            "type": "integer",
            "format": "int32"
          },
          "count": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "logs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbLog"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GooglePlaceAutocompleteSuggestion": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "placeId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GooglePlaceGeometry": {
        "type": "object",
        "properties": {
          "lat": {
            "type": "number",
            "format": "double"
          },
          "lng": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "GoogleReverseGeocodeResponse": {
        "required": [
          "address",
          "timeZone"
        ],
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImageUnion": {
        "type": "object",
        "properties": {
          "existingImageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "newImage": {
            "type": "string",
            "format": "binary",
            "nullable": true
          },
          "isExisting": {
            "type": "boolean",
            "readOnly": true
          },
          "isNew": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "StripeMetadata": {
        "type": "object",
        "properties": {
          "stripeCustomerId": {
            "type": "string",
            "nullable": true
          },
          "isTruckSubscriptionActive": {
            "type": "boolean",
            "nullable": true
          },
          "stripeCheckoutLinks": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Truck": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "ownerUserId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "cuisine": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "website": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastNotificationSentTimestampUtc": {
            "type": "string",
            "format": "date-time"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TruckImageMap"
            },
            "nullable": true
          },
          "activeOccurrence": {
            "$ref": "#/components/schemas/TruckScheduleOccurrence"
          },
          "occurrences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TruckScheduleOccurrence"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TruckImageMap": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "truckId": {
            "type": "integer",
            "format": "int32"
          },
          "imageUri": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TruckImageUpsertUnion": {
        "required": [
          "image",
          "sortOrder"
        ],
        "type": "object",
        "properties": {
          "image": {
            "$ref": "#/components/schemas/ImageUnion"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TruckLocation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "truckId": {
            "type": "integer",
            "format": "int32"
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          },
          "sqlTimeZone": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "TruckLocationCreateRequest": {
        "required": [
          "latitude",
          "longitude"
        ],
        "type": "object",
        "properties": {
          "longitude": {
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "format": "double"
          },
          "latitude": {
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "TruckLocationUpdateRequest": {
        "type": "object",
        "properties": {
          "longitude": {
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "latitude": {
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TruckMenu": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "truckId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TruckMenuCategory"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TruckMenuCategory": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "truckId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "menuItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TruckMenuItemExtension"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TruckMenuCreateRequest": {
        "required": [
          "categories",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TruckMenuCategory"
            }
          }
        },
        "additionalProperties": false
      },
      "TruckMenuItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "truckId": {
            "type": "integer",
            "format": "int32"
          },
          "image": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TruckMenuItemExtension": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "truckId": {
            "type": "integer",
            "format": "int32"
          },
          "image": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "truckMenuItemMapId": {
            "type": "integer",
            "format": "int32"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "format": "float"
          }
        },
        "additionalProperties": false
      },
      "TruckMenuUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TruckMenuCategory"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TruckNearbyReturnData": {
        "required": [
          "properties"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "geometry": {
            "$ref": "#/components/schemas/GeometryData"
          },
          "properties": {
            "$ref": "#/components/schemas/Truck"
          }
        },
        "additionalProperties": false
      },
      "TruckScheduleLocationRequest": {
        "type": "object",
        "properties": {
          "latitude": {
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "maximum": 180,
            "minimum": -180,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "address": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TruckScheduleOccurrence": {
        "required": [
          "location",
          "menu"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "ruleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "truckId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 120,
            "type": "string",
            "nullable": true
          },
          "openTimeLocal": {
            "type": "string",
            "format": "date-time"
          },
          "closeTimeLocal": {
            "type": "string",
            "format": "date-time"
          },
          "openTimeUtc": {
            "type": "string",
            "format": "date-time"
          },
          "closeTimeUtc": {
            "type": "string",
            "format": "date-time"
          },
          "isUserModified": {
            "type": "boolean"
          },
          "isClosed": {
            "type": "boolean"
          },
          "location": {
            "$ref": "#/components/schemas/TruckLocation"
          },
          "menu": {
            "$ref": "#/components/schemas/TruckMenu"
          }
        },
        "additionalProperties": false
      },
      "TruckScheduleOccurrenceCreateRequest": {
        "required": [
          "menuId",
          "name"
        ],
        "type": "object",
        "properties": {
          "ruleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "locationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "location": {
            "$ref": "#/components/schemas/TruckScheduleLocationRequest"
          },
          "menuId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isClosed": {
            "type": "boolean"
          },
          "dateLocal": {
            "type": "string",
            "format": "date"
          },
          "openTimeLocalToEvent": {
            "type": "string",
            "format": "time"
          },
          "closeTimeLocalToEvent": {
            "type": "string",
            "format": "time"
          }
        },
        "additionalProperties": false
      },
      "TruckScheduleOccurrenceUpdateRequest": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "menuId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isClosed": {
            "type": "boolean",
            "nullable": true
          },
          "dateLocal": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "openTimeLocal": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "closeTimeLocal": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "openUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "closeUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TruckScheduleRule": {
        "required": [
          "closeTimeLocal",
          "frequency",
          "interval",
          "locationId",
          "menuId",
          "name",
          "openTimeLocal",
          "startDate",
          "truckId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "truckId": {
            "type": "integer",
            "format": "int32"
          },
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "menuId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "frequency": {
            "type": "string",
            "nullable": true
          },
          "interval": {
            "type": "integer",
            "format": "int32"
          },
          "dayOfWeekMask": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "nthWeekOfMonth": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dayOfWeek": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "openTimeLocal": {
            "type": "string",
            "format": "time"
          },
          "closeTimeLocal": {
            "type": "string",
            "format": "time"
          },
          "location": {
            "$ref": "#/components/schemas/TruckLocation"
          },
          "menu": {
            "$ref": "#/components/schemas/TruckMenu"
          },
          "occurrences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TruckScheduleOccurrence"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TruckScheduleRuleCreateRequest": {
        "required": [
          "closeTimeLocalToEvent",
          "frequency",
          "interval",
          "menuId",
          "name",
          "openTimeLocalToEvent",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "locationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "location": {
            "$ref": "#/components/schemas/TruckScheduleLocationRequest"
          },
          "menuId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "frequency": {
            "type": "string",
            "nullable": true
          },
          "interval": {
            "type": "integer",
            "format": "int32"
          },
          "dayOfWeekMask": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "nthWeekOfMonth": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dayOfWeek": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "openTimeLocalToEvent": {
            "type": "string",
            "format": "time"
          },
          "closeTimeLocalToEvent": {
            "type": "string",
            "format": "time"
          }
        },
        "additionalProperties": false
      },
      "User": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "stripeCustomerId": {
            "type": "string",
            "nullable": true
          },
          "isTruckSubscriptionActive": {
            "type": "boolean",
            "nullable": true
          },
          "ownedTrucks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Truck"
            },
            "nullable": true
          },
          "favorites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserFavoriteMap"
            },
            "nullable": true
          },
          "fcmTokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserFCMTokenMap"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserFCMTokenMap": {
        "required": [
          "fcmToken",
          "userId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "fcmToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserFavoriteMap": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "truckId": {
            "type": "integer",
            "format": "int32"
          },
          "truck": {
            "$ref": "#/components/schemas/Truck"
          }
        },
        "additionalProperties": false
      },
      "UserProfileMetadataSupabaseResponse": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "userType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserProfileSummary": {
        "type": "object",
        "properties": {
          "userInformation": {
            "$ref": "#/components/schemas/UserProfileSupabaseResponse"
          },
          "favorites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Truck"
            },
            "nullable": true
          },
          "ownedTrucks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Truck"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserProfileSupabaseResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "existsInDb": {
            "type": "boolean"
          },
          "user_metadata": {
            "$ref": "#/components/schemas/UserProfileMetadataSupabaseResponse"
          },
          "stripeMetadata": {
            "$ref": "#/components/schemas/StripeMetadata"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Enter 'Bearer' [space] and then your valid JWT token.\n\nExample: `Bearer abc123`",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}